import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error

data = np.array([
    [1200, 200],
    [1700, 300],
    [1500, 250],
    [2300, 450],
    [2100, 400],
    [2500, 500]
])

y = data[:, 1]
X = data[:, 0].reshape(-1, 1)

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

def knn_regression(X_train, y_train, X_test, k=3):
    predictions = []
    for test_point in X_test:
        distances = np.sqrt(np.sum((X_train - test_point)**2, axis=1))
        nearest_indices = np.argsort(distances)[:k]
        nearest_values = y_train[nearest_indices]
        prediction = np.mean(nearest_values)
        predictions.append(prediction)
    return np.array(predictions)

y_pred = knn_regression(X_train, y_train, X_test, k=3)

mse = mean_squared_error(y_test, y_pred)
print(f"Mean Squared Error: {mse:.2f}")

print("\nTest Predictions:")
for i, (size, actual, pred) in enumerate(zip(X_test.flatten(), y_test, y_pred)):
    print(f"House Size: {size}, Actual Price: {actual}, Predicted Price: {pred:.2f}")
